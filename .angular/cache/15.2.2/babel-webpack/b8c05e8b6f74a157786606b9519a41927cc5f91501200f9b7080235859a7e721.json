{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nlet UserComponent = class UserComponent {\n  ResetForm() {\n    this.firstName = '';\n    this.lastName = '';\n  }\n  constructor(msg, userD) {\n    this.msg = msg;\n    this.userD = userD;\n    this.formName = \"User Form\";\n    this.val = 9;\n    this.firstName = \"Tushar\";\n    this.lastName = \"Misal\";\n    //Use to send the data from  Child to parent\n    this.newUserCreated = new EventEmitter();\n  }\n  ngOnInit() {\n    //subscribe the regisered method\n    this.userD.getUser().subscribe({\n      next: val => {\n        //console.log(val);\n        this.userApiData = val.data;\n      },\n      error: er => {\n        console.log('Error occured :' + er.message);\n      }\n    });\n  }\n  Save() {\n    //Service implmentation\n    console.log('From User Component : ' + this.msg.getMessage());\n    //Emitting data from child to parent\n    let fullName = this.firstName + ' ' + this.lastName;\n    this.newUserCreated.emit(fullName);\n    //alert('Form submitted'+this.firstName+' ' +this.lastName);\n    let user = {\n      userName: this.firstName,\n      lastName: this.lastName\n    };\n    this.userD.saveUser(user).subscribe();\n  }\n  ClearButtonVisibility() {\n    let value;\n    if (this.firstName != '' && this.lastName != '') {\n      value = true;\n    } else {\n      value = false;\n    }\n    return value;\n  }\n};\n__decorate([Output()], UserComponent.prototype, \"newUserCreated\", void 0);\nUserComponent = __decorate([Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})], UserComponent);\nexport { UserComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AASxD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAIxBC,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAKAC,YAAoBC,GAAkB,EAASC,KAAqB;IAAhD,QAAG,GAAHD,GAAG;IAAwB,UAAK,GAALC,KAAK;IAXpD,aAAQ,GAAC,WAAW;IACpB,QAAG,GAAS,CAAC;IAMb,cAAS,GAAS,QAAQ;IAC1B,aAAQ,GAAS,OAAO;IACxB;IACU,mBAAc,GAAE,IAAIR,YAAY,EAAU;EAIpD;EAEAS,QAAQ;IACN;IACA,IAAI,CAACD,KAAK,CAACE,OAAO,EAAE,CAACC,SAAS,CAAC;MAC7BC,IAAI,EAAGC,GAAG,IAAE;QACX;QACC,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACE,IAAI;MAC7B,CAAC;MACDC,KAAK,EAAEC,EAAE,IAAE;QACTC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACF,EAAE,CAACG,OAAO,CAAC;MAC3C;KAED,CAAC;EAEJ;EACAC,IAAI;IAEF;IACAH,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAC,IAAI,CAACZ,GAAG,CAACe,UAAU,EAAE,CAAC;IAC3D;IACA,IAAIC,QAAQ,GAAC,IAAI,CAACnB,SAAS,GAAC,GAAG,GAAC,IAAI,CAACC,QAAQ;IAC7C,IAAI,CAACmB,cAAc,CAACC,IAAI,CAACF,QAAQ,CAAC;IAClC;IACA,IAAIG,IAAI,GAAC;MACPC,QAAQ,EAAC,IAAI,CAACvB,SAAS;MACvBC,QAAQ,EAAC,IAAI,CAACA;KACf;IACD,IAAI,CAACG,KAAK,CAACoB,QAAQ,CAACF,IAAI,CAAC,CAACf,SAAS,EAAE;EACvC;EACAkB,qBAAqB;IAEnB,IAAIC,KAAK;IACT,IAAG,IAAI,CAAC1B,SAAS,IAAE,EAAE,IAAI,IAAI,CAACC,QAAQ,IAAE,EAAE,EAC1C;MACEyB,KAAK,GAAC,IAAI;KACX,MAED;MACEA,KAAK,GAAC,KAAK;;IAEb,OAAOA,KAAK;EACd;CACD;AA/CWC,YAAT9B,MAAM,EAAE,qDAA4C;AAX1CC,aAAa,eALzBH,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWhC,aAAa,CA0DzB;SA1DYA,aAAa","names":["Component","EventEmitter","Output","UserComponent","ResetForm","firstName","lastName","constructor","msg","userD","ngOnInit","getUser","subscribe","next","val","userApiData","data","error","er","console","log","message","Save","getMessage","fullName","newUserCreated","emit","user","userName","saveUser","ClearButtonVisibility","value","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Tushar\\Sample Projects\\first-angular-app\\src\\app\\user\\user.component.ts"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { MessageService } from '../services/message.service';\nimport { UserDataService } from '../services/user-data.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n  formName=\"User Form\";\n  val: number=9;\n \n  ResetForm(){\n    this.firstName = '';\n    this.lastName = '';\n  }\n  firstName:string =\"Tushar\";\n  lastName:string =\"Misal\";\n  //Use to send the data from  Child to parent\n  @Output() newUserCreated= new EventEmitter<string>();\n  constructor(private msg:MessageService,private userD:UserDataService)\n  {\n\n  }\n  userApiData!: any[];\n  ngOnInit():void {\n    //subscribe the regisered method\n    this.userD.getUser().subscribe({\n      next : val=>{\n       //console.log(val);\n        this.userApiData  =val.data;\n      },\n      error: er=>{\n        console.log('Error occured :'+er.message);\n      }\n      \n    });\n    \n  }\n  Save()\n  {\n    //Service implmentation\n    console.log('From User Component : '+this.msg.getMessage());\n    //Emitting data from child to parent\n    let fullName=this.firstName+' '+this.lastName;\n    this.newUserCreated.emit(fullName);\n    //alert('Form submitted'+this.firstName+' ' +this.lastName);\n    let user={\n      userName:this.firstName,\n      lastName:this.lastName\n    }\n    this.userD.saveUser(user).subscribe();\n  }\n  ClearButtonVisibility()\n  {\n    let value;\n    if(this.firstName!='' && this.lastName!='')\n    {\n      value=true;\n    }\n    else\n    {\n      value=false;\n    }\n    return value;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}