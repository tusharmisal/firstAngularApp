{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/message.service\";\nimport * as i2 from \"../services/user-data.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function UserComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.ResetForm());\n    });\n    i0.ɵɵtext(1, \"Clear\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserComponent {\n  ResetForm() {\n    this.firstName = '';\n    this.lastName = '';\n  }\n  constructor(msg, userD) {\n    this.msg = msg;\n    this.userD = userD;\n    this.formName = \"User Form\";\n    this.val = 9;\n    this.firstName = \"Tushar\";\n    this.lastName = \"Misal\";\n    //Use to send the data from  Child to parent\n    this.newUserCreated = new EventEmitter();\n  }\n  ngOnInit() {\n    //subscribe the regisered method\n    this.userD.getUser().subscribe(x => {\n      console.log(x);\n      this.userApiData = x.data;\n    });\n  }\n  Save() {\n    //Service implmentation\n    console.log('From User Component : ' + this.msg.getMessage());\n    //Emitting data from child to parent\n    let fullName = this.firstName + ' ' + this.lastName;\n    this.newUserCreated.emit(fullName);\n    //alert('Form submitted'+this.firstName+' ' +this.lastName);\n    let user = {\n      userName: this.firstName,\n      lastName: this.lastName\n    };\n  }\n  ClearButtonVisibility() {\n    let value;\n    if (this.firstName != '' && this.lastName != '') {\n      value = true;\n    } else {\n      value = false;\n    }\n    return value;\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.UserDataService));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  outputs: {\n    newUserCreated: \"newUserCreated\"\n  },\n  decls: 18,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-8\", \"mx-auto\", \"p-3\"], [1, \"form-group\", \"mt-3\"], [\"for\", \"formGroupExampleInput\"], [\"type\", \"text\", \"id\", \"formGroupExampleInput\", \"placeholder\", \"First Name\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"formGroupExampleInput2\"], [\"type\", \"text\", \"id\", \"formGroupExampleInput2\", \"name\", \"lastName\", 1, \"form-control\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"class\", \"btn btn-danger mt-3 ml-3\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"mt-3\", \"ml-3\", 3, \"click\"]],\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\")(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, UserComponent_button_14_Template, 2, 0, \"button\", 8);\n      i0.ɵɵtext(15, \" | \");\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserComponent_Template_button_click_16_listener() {\n        return ctx.Save();\n      });\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.formName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"placeholder\", \"Lastname\")(\"ngModel\", ctx.lastName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ClearButtonVisibility());\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".green[_ngcontent-%COMP%]{\\r\\n    color: green;\\r\\n}\\r\\n.red[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JlZW57XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbn1cclxuLnJlZHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;;;ICmBrDC,kCAA6G;IAAtBA;MAAAA;MAAA;MAAA,OAASA,iCAAW;IAAA,EAAC;IAACA,qBAAK;IAAAA,iBAAS;;;ADVrI,OAAM,MAAOC,aAAa;EAIxBC,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAKAC,YAAoBC,GAAkB,EAASC,KAAqB;IAAhD,QAAG,GAAHD,GAAG;IAAwB,UAAK,GAALC,KAAK;IAXpD,aAAQ,GAAC,WAAW;IACpB,QAAG,GAAS,CAAC;IAMb,cAAS,GAAS,QAAQ;IAC1B,aAAQ,GAAS,OAAO;IACxB;IACU,mBAAc,GAAE,IAAIR,YAAY,EAAU;EAIpD;EAEAS,QAAQ;IACN;IACA,IAAI,CAACD,KAAK,CAACE,OAAO,EAAE,CAACC,SAAS,CAAEC,CAAK,IAAG;MACtCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACd,IAAI,CAACG,WAAW,GAAGH,CAAC,CAACI,IAAI;IAC3B,CAAC,CAAC;EACJ;EACAC,IAAI;IAEF;IACAJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAC,IAAI,CAACP,GAAG,CAACW,UAAU,EAAE,CAAC;IAC3D;IACA,IAAIC,QAAQ,GAAC,IAAI,CAACf,SAAS,GAAC,GAAG,GAAC,IAAI,CAACC,QAAQ;IAC7C,IAAI,CAACe,cAAc,CAACC,IAAI,CAACF,QAAQ,CAAC;IAClC;IACA,IAAIG,IAAI,GAAC;MACPC,QAAQ,EAAC,IAAI,CAACnB,SAAS;MACvBC,QAAQ,EAAC,IAAI,CAACA;KACf;EACH;EACAmB,qBAAqB;IAEnB,IAAIC,KAAK;IACT,IAAG,IAAI,CAACrB,SAAS,IAAE,EAAE,IAAI,IAAI,CAACC,QAAQ,IAAE,EAAE,EAC1C;MACEoB,KAAK,GAAC,IAAI;KACX,MAED;MACEA,KAAK,GAAC,KAAK;;IAEb,OAAOA,KAAK;EACd;;AAjDWvB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAwB;EAAAC;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCT1B9B,8BAAuB;MAKXA,YAAY;MAAAA,iBAAK;MACrBA,4BAAM;MAEiCA,0BAAU;MAAAA,iBAAQ;MACrDA,gCACyC;MAAzCA;QAAA;MAAA,EAAuB;MADvBA,iBACyC;MAE3CA,+BAA6B;MACSA,0BAAS;MAAAA,iBAAQ;MACrDA,iCACuC;MAAvCA;QAAA;MAAA,EAAsB;MADtBA,iBACuC;MAIzCA,sEAA2H;MAACA,oBAC5H;MAAAA,kCAAoE;MAAjBA;QAAA,OAAS+B,UAAM;MAAA,EAAC;MAAC/B,uBAAM;MAAAA,iBAAS;;;MAfjFA,eAAY;MAAZA,kCAAY;MAKZA,eAAuB;MAAvBA,uCAAuB;MAI6CA,eAA0B;MAA1BA,wCAA0B;MAKxCA,eAA6B;MAA7BA,kDAA6B","names":["EventEmitter","i0","UserComponent","ResetForm","firstName","lastName","constructor","msg","userD","ngOnInit","getUser","subscribe","x","console","log","userApiData","data","Save","getMessage","fullName","newUserCreated","emit","user","userName","ClearButtonVisibility","value","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Tushar\\Sample Projects\\first-angular-app\\src\\app\\user\\user.component.ts","D:\\Tushar\\Sample Projects\\first-angular-app\\src\\app\\user\\user.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { MessageService } from '../services/message.service';\nimport { UserDataService } from '../services/user-data.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n  formName=\"User Form\";\n  val: number=9;\n \n  ResetForm(){\n    this.firstName = '';\n    this.lastName = '';\n  }\n  firstName:string =\"Tushar\";\n  lastName:string =\"Misal\";\n  //Use to send the data from  Child to parent\n  @Output() newUserCreated= new EventEmitter<string>();\n  constructor(private msg:MessageService,private userD:UserDataService)\n  {\n\n  }\n  userApiData!: any[];\n  ngOnInit():void {\n    //subscribe the regisered method\n    this.userD.getUser().subscribe((x:any)=>{\n      console.log(x);\n      this.userApiData  =x.data;\n    })\n  }\n  Save()\n  {\n    //Service implmentation\n    console.log('From User Component : '+this.msg.getMessage());\n    //Emitting data from child to parent\n    let fullName=this.firstName+' '+this.lastName;\n    this.newUserCreated.emit(fullName);\n    //alert('Form submitted'+this.firstName+' ' +this.lastName);\n    let user={\n      userName:this.firstName,\n      lastName:this.lastName\n    }\n  }\n  ClearButtonVisibility()\n  {\n    let value;\n    if(this.firstName!='' && this.lastName!='')\n    {\n      value=true;\n    }\n    else\n    {\n      value=false;\n    }\n    return value;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-8 mx-auto p-3\">\n        <!-- [ngStyle]=\"{'background-color': val> 10 ? 'red' : 'green'}\" -->\n        <!-- [ngClass]=\"val > 8 ? 'red' : 'green'\" -->\n        <h2>{{formName}}</h2>\n        <form>\n          <div class=\"form-group mt-3\">\n            <label for=\"formGroupExampleInput\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"First Name\"\n            [(ngModel)]=\"firstName\" name=\"firstName\">\n          </div>\n          <div class=\"form-group mt-3\">\n            <label for=\"formGroupExampleInput2\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput2\" [placeholder]=\"'Lastname'\"\n            [(ngModel)]=\"lastName\" name=\"lastName\">\n          </div>\n          <!-- <span>{{firstName}}</span>\n          <span>{{lastName}}</span> -->\n          <button type=\"submit\" class=\"btn btn-danger mt-3 ml-3\" *ngIf=\"ClearButtonVisibility()\" (click)=\"ResetForm()\">Clear</button> |\n          <button type=\"submit\" class=\"btn btn-primary mt-3\" (click)=\"Save()\">Submit</button>\n        </form>\n      </div>\n    </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}